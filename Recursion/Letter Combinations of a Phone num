class Solution {
public:

    void solve(int i , string & digits , string &arr , vector<string>& res ,unordered_map<char,string>& mp){
        if(i >= digits.size()){
            res.push_back(arr);
        }

        string temp = mp[digits[i]];

        for(int it = 0 ; it < temp.size() ; it++){
            arr.push_back(temp[it]);
            solve(i+1,digits,arr,res,mp);
            arr.pop_back();
        }


    }

    vector<string> letterCombinations(string digits) {
        if(digits.empty()) return {};
    
    unordered_map<char,string> mp;
    
    mp['2'] = "abc";
    mp['3'] = "def";
    mp['4'] = "ghi";
    mp['5'] = "jkl";
    mp['6'] = "mno";
    mp['7'] = "pqrs";
    mp['8'] = "tuv";
    mp['9'] = "wxyz";
    
    vector<string> res;
    string arr = "";
    
    solve(0,digits,arr,res,mp);

    return res;
    }
};
